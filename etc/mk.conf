###########FOR SYSTEM BUILD###############
MKNPF=				no
MKZFS=				no
MKRUMP=				no
MKIPFILTER=			no
MKATF=				no
MKYUA=				no
SLOPPY_FLIST=			yes
#MAKE_ENV+=			"LD_LIBRARY_PATH=/usr/pkg/gcc48/lib"

####to bootstrap gcc
.if ${PKGPATH:M*/digest*} || \
        ${PKGPATH:M*/gcc*} || \
        ${PKGPATH:M*/m4*} || \
        ${PKGPATH:M*/perl*} || \
        ${PKGPATH:M*/p5-*} || \
        ${PKGPATH:M*/gsed*} || \
        ${PKGPATH:M*/help2man*} || \
        ${PKGPATH:M*/cwrapper*} || \
        ${PKGPATH:M*/tradcpp*} || \
        ${PKGPATH:M*/ccache*} || \
        ${PKGPATH:M*/gmp*} || \
        ${PKGPATH:M*/gettext*} || \
        ${PKGPATH:M*/gmake*} || \
        ${PKGPATH:M*/mpcomplex*} || \
        ${PKGPATH:M*/libtool*} || \
        ${PKGPATH:M*/mpfr*} || \
        ${PKGPATH:M*/cloog*} || \
        ${PKGPATH:M*/isl*}
PKGSRC_COMPILER=                ccache gcc
#USE_NATIVE_GCC=			yes
.else
USE_PKGSRC_GCC=			yes
USE_GCC_RUNTIME=		yes
USE_PKGSRC_GCC_RUNTIME=		yes
GCC_REQD?=			4.8
.endif
PKGSRC_COMPILER=                ccache gcc
CCACHE_DIR=                     /var/ccache

.if ${MACHINE_ARCH:Mi386}
CFLAGS+=			-march=i486
CFLAGS+=			-mtune=generic
LDFLAGS+=			-Wl,-no-keep-memory -Wl,-reduce-memory
.endif
PKGSRC_USE_SSP=			no

##########################################
PKGSRC_FORTRAN=			f2c
FAM_DEFAULT=			gamin
PREFER_NATIVE=			yes
X11_TYPE=			native
#############CLANG
#USE_SSP=			no
INSTALL_UNSTRIPPED=		yes
DEBUG=				yes
#############CLANG
PKG_INFO?=			/usr/sbin/pkg_info
DISTDIR?=			/fserver/distfiles
LOCALPATCHES=			/usr/localpatches-${OS_VERSION:R}
WRKOBJDIR?=                     /usr/work
PREFIX?=			/usr/pkg
ALLOW_VULNERABLE_PACKAGES=	yes
PKGPATH?=			""
WARNS=				0
PKGREPOSITORY?=			/usr/${OPSYS}-${OS_VERSION}/packages
STAGE_PKGFILE=			${PKGREPOSITORY}/${FILEBASE}-${PKGVERSION}${PKG_SUFX}
#INSTALL_TEMPLATES+=		/etc/mk/updatepkgdb
#DEINSTALL_TEMPLATES+=		/etc/mk/updatepkgdb

#NCPU!=				echo $$(eval sysctl -n hw.ncpu) - 1 | bc
#NCPU!=				echo $$(eval sysctl -n hw.ncpu) 0 2 | bc
MAKE_JOBS?=			8
MAKE_JOBS_SAFE=			yes

CXXFLAGS+=			-Wno-narrowing

#.if ${PKGPATH:M*/libfreehand}
#CXXFLAGS+=			-std=c++11
#.endif


#CPPFLAGS+=			-Wno-unused-local-typedefs
CPPFLAGS+=			-Wno-undef
CPPFLAGS+=			-Wno-deprecated-declarations
#CPPFLAGS+=			-Wno-maybe-uninitialized
CPPFLAGS+=			-Wno-unused-function
CXXFLAGS+=			-Wno-delete-non-virtual-dtor
#CFLAGS+=			-fno-stack-protector
#CXXFLAGS+=			-fno-stack-protector

CFLAGS+=			-Wno-error
CFLAGS+=			-Wno-unused-value
CXXFLAGS+=			-Wno-undef
CXXFLAGS+=			-Wno-shadow
CXXFLAGS+=			-Wno-strict-aliasing
CXXFLAGS+=			-Wno-unused-variable
CXXFLAGS+=			-Wno-unused-value
CXXFLAGS+=			-Wno-unused-function


#NO_CHECKSUM=			yes

.include "/etc/builtins.mk"
#######BUILTINS NOOOOOOOOOOOO############
USE_BUILTIN.gettext:=		no
USE_BUILTIN.dl=			yes
USE_BUILTIN.openssl:=		yes
#USE_BUILTIN.libXau:=		no
#USE_BUILTIN.libXdmcp:=		no
#USE_BUILTIN.inputproto:=	no
#USE_BUILTIN.extproto:=		no
#USE_BUILTIN.xproto:=		no
#USE_BUILTIN.xcb-proto:=		no
#USE_BUILTIN.Xrender:=		no
#USE_BUILTIN.libxcb:=		no
#USE_BUILTIN.libXi:=		no
#USE_BUILTIN.libXrender:=	no
#USE_BUILTIN.libX11:=		no
USE_BUILTIN.fontconfig:=	no
USE_BUILTIN.xz:=		yes
USE_BUILTIN.zlib:=		yes
USE_BUILTIN.ncurses:=		yes

############LICENCES#############
ACCEPTABLE_LICENSES+=		gnu-agpl-v3
ACCEPTABLE_LICENSES+=		sun-jdk6-license
ACCEPTABLE_LICENSES+=		eclipse-license
ACCEPTABLE_LICENSES+=		rar-license
ACCEPTABLE_LICENSES+=		lame-license
ACCEPTABLE_LICENSES+=		flash-license
ACCEPTABLE_LICENSES+=		adobe-flashsupport-license
ACCEPTABLE_LICENSES+=		mplayer-codec-license
ACCEPTABLE_LICENSES+=		sun-jre6-license
ACCEPTABLE_LICENSES+=		sun-openlook-license
ACCEPTABLE_LICENSES+=           sendmail-license
ACCEPTABLE_LICENSES+=		xv-license
ACCEPTABLE_LICENSES+=		fraunhofer-license

###############################################
PKG_RESUME_TRANSFERS=		YES
PATCH_FUZZ_FACTOR=		-F2

############OPTIONS###############
PKG_DEFAULT_OPTIONS=			-alsa -esound -inet6 -gssapi pulseaudio -nas
PKG_DEFAULT_OPTIONS+=			-polkit -consolekit sqlite3 x11 -libvpx pgsql
PGSQL_VERSION_DEFAULT=			94
PGSQL_VERSION_REQD=			94
PKG_OPTIONS.qemu=			gtk3
PKG_OPTIONS.ssl=			zlib
PKG_OPTIONS.mupdf=			curl glfw
PKG_OPTIONS.cyrus-imapd=		pgsql
PKG_OPTIONS.rbldnsd=			zlib rbldnsd-master-dump
PKG_OPTIONS.sox=			lame
PKG_OPTIONS.postgresql94=		xml
PKG_OPTIONS.xulrunner=			gnome
PKG_OPTIONS.ffmpeg=			lame ass  theora vorbis x264 xvid
PKG_OPTIONS.ffmpeg3+=			ass doc fdk-aac fontconfig freetype lame
PKG_OPTIONS.ffmpeg3+=			opencore-amr openssl theora vorbis x264 x265 xcb xvid
PKG_OPTIONS.sendmail=          		sasl
PKG_OPTIONS.boehm-gc=			threads
PKG_OPTIONS.pulseaudio=			-fftw
PKG_OPTIONS.SDL=			-esound -nas
PKG_OPTIONS.thunderbird=		gnome
PKG_OPTIONS.gtk2=			cups
PKG_OPTIONS.cups=			-kerberos
PKG_OPTIONS.gtk3=			cups -gtk3-atk-bridge
PKG_OPTIONS.vlc=			gnome
PKG_OPTIONS.xterm=			pcre
PKG_OPTIONS.firefox=			-webrtc -oss
PKG_OPTIONS.drupal=			-apache sqlite pgsql mysql unicode
PKG_OPTIONS.lighttpd=			fam bzip2
PKG_OPTIONS.gvfs=			avahi
PKG_OPTIONS.webkit-gtk=			-enchant -introspection -opengl -webkit-jit
PKG_OPTIONS.librsvg=			-introspection
PKG_OPTIONS.gdm=			consolekit
PKG_OPTIONS.MesaLib=			-llvm -dri
PKG_OPTIONS.qt4=			cups gtk2
PKG_OPTIONS.graphviz=			rsvg
##########DEFINES################

OS_VERSION?=	""

#.if ${PKGPATH:M*/boost*}
#BJAM_ARGS+=	cxxflags="-std=c++11 -mfloat-abi=soft"
#.endif

.if ${PKGPATH:M*/mate-applets} || \
	${PKGPATH:M*/nss} || \
	${PKGPATH:M*/libusb*} || \
	${PKGPATH:Marchivers/bzip2} || \
	${PKGPATH:M*/cdrtools*} || \
	${PKGPATH:M*/muparser*} || \
	${PKGPATH:M*/tightvnc*} || \
	${PKGPATH:M*/shared-mime-info*} || \
	${PKGPATH:M*/vnc*} || \
	${PKGPATH:M*/imap*} || \
	${PKGPATH:M*/fontconfig*} || \
	${PKGPATH:M*/pth*} || \
	${PKGPATH:M*/librsvg*} || \
	${PKGPATH:M*/GConf-ui*} || \
	${PKGPATH:M*/p5-*} || \
	${PKGPATH:M*/epm*} || \
	${PKGPATH:M*/gdbm}
MAKE_JOBS=			1
MAKE_JOBS_SAFE=			no
.endif

.if ${PKGPATH:M*/gtk-doc*}
.include "../../textproc/docbook-xsl/buildlink3.mk"
.endif

.if ${PKGPATH:M*/caja*} || \
	${PKGPATH:M*/pluma*} || \
	${PKGPATH:M*/gimp*} || \
	${PKGPATH:M*/gnome-vfs} || \
	${PKGPATH:M*/libgnomeui*}
USE_LANGUAGES+= c++ c
.include "../../archivers/libarchive/buildlink3.mk"
.include "../../devel/pth/buildlink3.mk"
.include "../../devel/ncurses/buildlink3.mk"
.include "../../sysutils/gnome-mount/buildlink3.mk"
.include "../../mk/fuse.buildlink3.mk"
.endif


.if ${PKGPATH:Msysutils/hal}
CONFIGURE_ARGS+=		--disable-console-kit
CONFIGURE_ARGS+=		--disable-policy-kit
.endif

.if ${PKGPATH:Mmeta-pkgs/gnome}
DEPENDS+=       mozilla-rootcerts:../../security/mozilla-rootcerts
.endif

.if ${PKGPATH} == "devel/xulrunner192"
CFLAGS+=			-Wno-format-extra-arg
CFLAGS+=			-Wno-undef -Wno-unused-variable -Wno-unused-but-set-variable
CFLAGS+=			-Wno-unused-function -Wno-shadow -Wno-redundant-decls
CFLAGS+=			-Wno-maybe-uninitialized -Wno-enum-compare
.endif

.if ${PKGPATH:M*/webkit24-gtk*}
CONFIGURE_ARGS+=       --disable-silent-rules
SUBST_CLASSES+=		libatomic
SUBST_MESSAGE+=		FIX LIBATOMIC OPS change -latomic to -latomic_ops
SUBST_STAGE.libatomic=	pre-configure
SUBST_FILES.libatomic=	configure
SUBST_SED.libatomic=	-e "s/-latomic/-latomic_ops/"
.include "../../devel/libatomic_ops/buildlink3.mk"
.endif

.if ${PKGPATH} == "devel/anjuta"
CFLAGS+=			-Wno-error=format-extra-args
CFLAGS+=			-Wno-deprecated-declarations
CFLAGS+=			-Wno-char-subscripts
CFLAGS+=			-Wno-unused-but-set-variable
CFLAGS+=			-Wno-char-subscripts
CFLAGS+=			-Wno-maybe-uninitialized
CFLAGS+=			-Wno-missing-prototypes
CFLAGS+=			-Wno-unused-variable
CFLAGS+=			-Wno-strict-prototypes
CFLAGS+=			-Wno-unused-function
CFLAGS+=			-Wno-error=format-zero-length
CFLAGS+=			-Wno-error=format=
.endif

.if	${PKGPATH:M*/libtheora} || \
	${PKGPATH:M*/x264-devel} || \
	${PKGPATH:Mmultimedia/ffmpeg*}
CONFIGURE_ARGS+=	--disable-asm
.endif

.if ${PKGPATH:M*/ruby*}
CONFIGURE_ARGS+=	--disable-dtrace
.endif

.if ${PKGPATH} == "audio/aumix-gtk"
.include		"../../graphics/hicolor-icon-theme/buildlink3.mk"
.endif

.if	${PKGPATH:M*/evolution-data-server*}
.include "../../security/libgcrypt/buildlink3.mk"
.include "../../security/libgpg-error/buildlink3.mk"
.endif

#.if	${PKGPATH:M*/firefox*} || \
#	${PKGPATH:M*/thunderbird*} || \
#	${PKGPATH:M*/tightvnc*} || \
#	${PKGPATH:M*/librecad} || \
#	${PKGPATH:M*/vlc} || \
#	${PKGPATH:M*/liblangtag}
#PKGSRC_COMPILER:=	gcc
#.endif

.if	${PKGPATH:Mmate-control-center*} || \
	${PKGPATH:M*/gdk*} || \
	${PKGPATH:M*/x11-links*}
.include "../../x11/libXi/buildlink3.mk"
.endif

.if ${PKGPATH:Mgraphics/py-Pillow}
PLIST_SRC+=		PLIST.lzt
.endif

.if ${PKGPATH:Maudio/pulseaudio}
.include "../../audio/jack/buildlink3.mk"
CONFIGURE_ARGS+=	--enable-jack
PLIST_SRC+=		PLIST.jack PLIST
.endif

.if ${PKGPATH:Maudio/sox}
.include "../../x11/libxcb/buildlink3.mk"
.endif

.if ${PKGPATH:M*/mate-media*}
.include "../../audio/libmatemixer/buildlink3.mk"
.include "../../meta-pkgs/pulseaudio-tools/buildlink3.mk"
.endif

.if ${PKGPATH:Maudio/sox*} || \
	${PKGPATH:Maudio/libmatemixer*}
.include "../../lzt/pulseaudio/buildlink3.mk"
.endif

rmstage: build-clean
	@echo rmstage ...  DONE
	cd ${WRKDIR};\
	rm -rf .install_done .destdir .build_done .pkginstall .pkgdb .PLIST* .PLIST_deps .package_done
	rm -f ${STAGE_PKGFILE}

showpkgname:
	@echo ${PKGNAME}

.if     !empty(PKGPATH:M*/firefox)
CONFIGURE_ARGS+=	--disable-skia --disable-skia-gpu
.endif

.if     !empty(PKGPATH:M*/libvpx)
CONFIGURE_ARGS+=	--target=generic-gnu
.endif

.if     ${PKGPATH:M*/policykit*}
PKG_FAIL_REASON=        "DO NOT BUILD with ${PKGPATH}"
.endif

do-fix-stack-protector:
	/root/bin/fix-stack-protector ${WRKDIR}
